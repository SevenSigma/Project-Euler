// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import Foundation

// Brute force approach
var n1 = 1
var n2 = 1
var n3 = n2+n1
var evenTerms:[Int] = []

while n3 < 4000000 {
    if n3 % 2 == 0 {
        evenTerms.append(n3)
    }
    n1 = n2
    n2 = n3
    n3 = n1+n2
}
print(evenTerms)
print("Brute force result is: \(evenTerms.reduce(0,+))")

// Every third term is even by definition
var x3 = 2
var x6 = x3*4
var x9 = x6*4 + x3
var everyThirdTerm:[Int] = []

while x6 < 40000000 {
    everyThirdTerm.append(x3)
    x3 = x6
    x6 = x9
    x9 = x6*4 + x3
}
print(everyThirdTerm)
print("Since every third term is even, the result is: \(everyThirdTerm.reduce(0,+))")
